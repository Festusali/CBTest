# Generated by Django 2.0.7 on 2018-12-12 00:13

import cbt.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('100', '100 Level'), ('200', '200 Level'), ('300', '300 Level'), ('400', '400 Level'), ('500', '500 Level')], default=100, help_text='What level is the answer meant for?', max_length=3)),
                ('semester', models.CharField(choices=[('1', 'First Semester'), ('2', 'Second Semester')], default=1, help_text='What semester is the answer meant for?', max_length=2)),
                ('user_answer', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Choose your answer')),
                ('is_answer', models.BooleanField(default=False, help_text='Is the answer correct?')),
                ('date', models.DateTimeField(auto_now_add=True, help_text='When was this examination taken?')),
                ('answered_by', models.ForeignKey(help_text='Student Username', on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Name of country', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Course Title', max_length=256)),
                ('code', models.SmallIntegerField(verbose_name='Course Code')),
                ('unit', models.SmallIntegerField(verbose_name='Course Credit Unit')),
                ('detail', models.TextField(help_text='Details of the department')),
            ],
        ),
        migrations.CreateModel(
            name='CourseResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('100', '100 Level'), ('200', '200 Level'), ('300', '300 Level'), ('400', '400 Level'), ('500', '500 Level')], default=100, help_text='What level is this course for?', max_length=3)),
                ('semester', models.CharField(choices=[('1', 'First Semester'), ('2', 'Second Semester')], default=1, help_text='What semester is this course for?', max_length=2)),
                ('score', models.SmallIntegerField(verbose_name='What is the score?')),
                ('average_score', models.FloatField(blank=True, help_text='What is the score average?', null=True)),
                ('course', models.ForeignKey(help_text='associated course', on_delete=django.db.models.deletion.CASCADE, related_name='user_course', to='cbt.Course')),
                ('user', models.ForeignKey(help_text='Student Username', on_delete=django.db.models.deletion.CASCADE, related_name='course_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Name of Department', max_length=200)),
                ('detail', models.TextField(help_text='Details of the faculty')),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Name of Faculty', max_length=200)),
                ('detail', models.TextField(help_text='Details of faculty')),
            ],
        ),
        migrations.CreateModel(
            name='Kin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text="Enter Next of Kin's full name. Surname first.", max_length=250)),
                ('address', models.CharField(blank=True, help_text="Next of Kin's Address", max_length=250)),
                ('phone', models.IntegerField(blank=True, help_text="Next of Kin's Mobile No.", null=True)),
                ('relationship', models.CharField(blank=True, choices=[('F', 'Father'), ('M', 'Mother'), ('B', 'Brother'), ('S', 'Sister'), ('U', 'Uncle'), ('O', 'Others')], help_text='How are you related?', max_length=2)),
                ('email', models.EmailField(blank=True, help_text="Next of Kin's Email", max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='LGA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Name of local government area.', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Programme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('programme', models.CharField(blank=True, choices=[('B.Sc', 'Bachelor of Science'), ('B.Eng', 'Bechelor of Engineering'), ('B.A', 'Bachelor of Arts')], help_text='Please select your Programme Type.', max_length=5)),
                ('level', models.CharField(choices=[('100', '100 Level'), ('200', '200 Level'), ('300', '300 Level'), ('400', '400 Level'), ('500', '500 Level')], default=100, help_text='Please select your current level.', max_length=3)),
                ('reg_no', models.CharField(blank=True, help_text='Enter your Registration Number.', max_length=30)),
                ('jamb_no', models.CharField(blank=True, help_text='Enter your JAMB Registration Number.', max_length=30)),
                ('student_mode', models.CharField(blank=True, choices=[('N', 'New Student'), ('C', 'Returning Student'), ('P', 'Probation'), ('W', 'Withrawal')], help_text="Student's Mode", max_length=50)),
                ('entry_mode', models.CharField(blank=True, choices=[('U', 'UTME'), ('D', 'Direct Entry'), ('T', 'Transfer'), ('I', 'IJAMB')], help_text="Student's Mode of Entry.", max_length=50)),
                ('study_mode', models.CharField(blank=True, choices=[('F', 'Full Time'), ('P', 'Part Time')], help_text="Student's Mode of Study.", max_length=50)),
                ('entry_year', models.SmallIntegerField(blank=True, null=True, verbose_name='Choose year of Admission')),
                ('graduation_year', models.SmallIntegerField(blank=True, null=True, verbose_name='Choose year of Graduation')),
                ('department', models.ForeignKey(blank=True, help_text='Student Programme', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='programme', to='cbt.Department')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detail', models.CharField(help_text='Input question', max_length=500)),
                ('level', models.CharField(choices=[('100', '100 Level'), ('200', '200 Level'), ('300', '300 Level'), ('400', '400 Level'), ('500', '500 Level')], default=100, help_text='What level is the question meant for?', max_length=3)),
                ('semester', models.CharField(choices=[('1', 'First Semester'), ('2', 'Second Semester')], default=1, help_text='What semester is the question meant for?', max_length=2)),
                ('option1', models.CharField(blank=True, help_text='Input option 1', max_length=800)),
                ('option2', models.CharField(blank=True, help_text='Input option 2', max_length=800)),
                ('option3', models.CharField(blank=True, help_text='Input option 3', max_length=800)),
                ('option4', models.CharField(blank=True, help_text='Input option 4', max_length=800)),
                ('option5', models.CharField(blank=True, help_text='Input option 5', max_length=800)),
                ('answer', models.PositiveSmallIntegerField(help_text="Input the option that is the correct answer. eg: '1' for option1 or '2' for option2")),
                ('mark', models.PositiveSmallIntegerField(verbose_name='What is the score/mark of this question?')),
                ('course', models.ForeignKey(help_text='Select course', on_delete=django.db.models.deletion.CASCADE, related_name='course', to='cbt.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('100', '100 Level'), ('200', '200 Level'), ('300', '300 Level'), ('400', '400 Level'), ('500', '500 Level')], default=100, help_text='What is your level.', max_length=3)),
                ('semester', models.CharField(choices=[('1', 'First Semester'), ('2', 'Second Semester')], default=1, help_text='What semester has this result?', max_length=2)),
                ('total_score', models.SmallIntegerField(blank=True, null=True, verbose_name='Total score for the semester')),
                ('total_courses', models.PositiveSmallIntegerField(verbose_name='How many courses were offered in total?')),
                ('date', models.DateTimeField(auto_now_add=True, help_text='When was this result computed?')),
                ('average', models.PositiveSmallIntegerField(verbose_name='What is the results average?')),
                ('remark', models.TextField(blank=True, default='', null=True, verbose_name="How is the performance of this student's result?")),
                ('user', models.ForeignKey(help_text='Student Username', on_delete=django.db.models.deletion.CASCADE, related_name='result', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Name of university', max_length=200)),
                ('detail', models.TextField(help_text='Details of the University')),
            ],
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text="Enter sponsor's full name. Surname first.", max_length=250)),
                ('address', models.CharField(blank=True, help_text="Sponsor's Address", max_length=250)),
                ('phone', models.IntegerField(blank=True, help_text="Sponsor's Mobile No.", null=True)),
                ('relationship', models.CharField(blank=True, choices=[('F', 'Father'), ('M', 'Mother'), ('B', 'Brother'), ('S', 'Sister'), ('U', 'Uncle'), ('O', 'Others')], help_text='How are you related?', max_length=2)),
                ('email', models.EmailField(blank=True, help_text="Sponsor's Email", max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Name of state.', max_length=200)),
                ('country', models.ForeignKey(help_text='Name of country.', on_delete=django.db.models.deletion.CASCADE, related_name='contry_name', to='cbt.Country')),
            ],
        ),
        migrations.CreateModel(
            name='UserDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('middle_name', models.CharField(blank=True, help_text='middle name', max_length=150)),
                ('birth_date', models.DateTimeField(blank=True, null=True, verbose_name='Date of birth')),
                ('email', models.EmailField(blank=True, help_text='Email Address', max_length=254)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('T', 'Transgender'), ('O', 'Others')], help_text='Please select your gender', max_length=2)),
                ('status', models.CharField(blank=True, choices=[('M', 'Married'), ('E', 'Engaged'), ('D', 'Divorced'), ('S', 'Single'), ('C', 'Complicated'), ('O', 'Others')], help_text='Please select your relationship status.', max_length=2)),
                ('religion', models.CharField(blank=True, choices=[('C', 'Christianity'), ('I', 'Islam'), ('T', 'Traditional'), ('H', 'Hinduism'), ('O', 'Others')], help_text='Please select your religion.', max_length=2)),
                ('home_town', models.CharField(blank=True, help_text='Home Town', max_length=250)),
                ('perm_address', models.CharField(blank=True, help_text='Permanent Address', max_length=300)),
                ('phone', models.IntegerField(blank=True, help_text='Your Mobile Phone Number', null=True)),
                ('contact_address', models.CharField(blank=True, help_text='Contact Address', max_length=300)),
                ('blood_group', models.CharField(blank=True, help_text='Blood Group', max_length=10)),
                ('genotype', models.CharField(blank=True, help_text='Genotype', max_length=10)),
                ('signature', models.ImageField(blank=True, help_text='Choose your signature.', upload_to=cbt.models.u_s_path)),
                ('pictures', models.ImageField(blank=True, help_text='Choose your profile picture.', upload_to=cbt.models.u_p_path)),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified date')),
                ('lga', models.ForeignKey(blank=True, help_text='Local Government of origin', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lga', to='cbt.LGA')),
                ('state', models.ForeignKey(blank=True, help_text='State of origin', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='state', to='cbt.State')),
                ('user', models.OneToOneField(help_text='Username of registered user.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='sponsor',
            name='student',
            field=models.OneToOneField(help_text='Username of registered student.', on_delete=django.db.models.deletion.CASCADE, to='cbt.UserDetail'),
        ),
        migrations.AddField(
            model_name='programme',
            name='student',
            field=models.OneToOneField(help_text='Username of registered student.', on_delete=django.db.models.deletion.CASCADE, to='cbt.UserDetail'),
        ),
        migrations.AddField(
            model_name='lga',
            name='state',
            field=models.ForeignKey(help_text='Name of state.', on_delete=django.db.models.deletion.CASCADE, related_name='state_name', to='cbt.State'),
        ),
        migrations.AddField(
            model_name='kin',
            name='student',
            field=models.OneToOneField(help_text='Username of registered student.', on_delete=django.db.models.deletion.CASCADE, to='cbt.UserDetail'),
        ),
        migrations.AddField(
            model_name='faculty',
            name='school',
            field=models.ForeignKey(help_text='Choose the University', on_delete=django.db.models.deletion.CASCADE, related_name='University', to='cbt.School'),
        ),
        migrations.AddField(
            model_name='department',
            name='faculty',
            field=models.ForeignKey(help_text='Choose the faculty', on_delete=django.db.models.deletion.CASCADE, related_name='faculty', to='cbt.Faculty'),
        ),
        migrations.AddField(
            model_name='course',
            name='department',
            field=models.ForeignKey(help_text='Select Department', on_delete=django.db.models.deletion.CASCADE, related_name='department', to='cbt.Department'),
        ),
        migrations.AddField(
            model_name='answer',
            name='course',
            field=models.ForeignKey(help_text='What course does this question belong to?', on_delete=django.db.models.deletion.CASCADE, related_name='course_answered', to='cbt.Course'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(help_text='associated question', on_delete=django.db.models.deletion.CASCADE, related_name='question', to='cbt.Question'),
        ),
    ]
